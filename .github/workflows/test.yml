name: Test

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      API_SERVER_PORT: 8080
      API_ORIGIN: http://localhost:8080
      API_BASE_PATH: /api
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Setup AWS Amplify CLI
        run: |
          mkdir ~/.npm-global
          npm config set prefix '~/.npm-global'
          export PATH=~/.npm-global/bin:$PATH
          source ~/.profile
          source ~/.bashrc
          source ~/.bash_profile
          npm install -g @aws-amplify/cli
      # see: https://github.com/actions/setup-node/issues/32#issuecomment-539794249
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - uses: actions/cache@v2
        id: client-npm-cache
        with:
          path: 'node_modules'
          key: client-npm-${{ hashFiles('yarn.lock') }}
      - run: npm install
        if: steps.client-npm-cache.outputs.cache-hit != 'true'
      - run: npm install --prefix server
        if: steps.server-npm-cache.outputs.cache-hit != 'true'
      - name: Setup Amplify with headless mode
        run: sh ./amplify/pull.sh prod ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ~/.npm-global/bin
      - run: npm run lint
      - run: |
          sudo systemctl start mysql.service
          echo "API_DATABASE_URL=mysql://root:root@localhost:3306/test" > server/prisma/.env
      - run: npm run typecheck
      - run: |
          npm run migrate:dev
          npm run test
        env:
          API_JWT_SECRET: test_secret
